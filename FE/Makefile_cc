# no built-in rules please
.SUFFIXES:

DIR=build_cc

$(info $(shell mkdir -p $(DIR)))

LANG_TESTS := $(wildcard LangTest/*_test.cw)
LANG_SOURCES := $(wildcard LangTest/*.cw)

DATA_SOURCES := $(wildcard TestData/*.cw)

LIB_TESTS := $(wildcard Lib/*_test.cw)
LIB_SOURCES :=  $(wildcard Lib/*.cw)

ALL_SOURCES := $(LANG_SOURCES) $(LIB_SOURCES) $(DATA_SOURCES)
ALL_SOURCES_GENERIC :=  $(filter $(wildcard */*gen.cw), $(ALL_SOURCES))
ALL_SOURCES_NO_GENERIC :=  $(filter-out $(wildcard */*gen.cw), $(ALL_SOURCES))

tests: $(EMIT_IR) tests_meta_py
	@echo "PASSED $@"
############################################################
# Code Gen
############################################################

cwast_gen.cc: cwast.py
	@echo "[$@]"
	$(PYPY) ./cwast.py gen_cc <$@ > $(DIR)/$@.tmp
	@mv $(DIR)/$@.tmp $@

cwast_gen.h: cwast.py
	@echo "[$@]"
	$(PYPY) ./cwast.py gen_h <$@ > $(DIR)/$@.tmp
	@mv $(DIR)/$@.tmp $@

lexer_gen.cc: lexer_tab.py
	@echo "[$@]"
	$(PYPY) ./lexer_tab.py gen_cc <$@ > $(DIR)/$@.tmp
	@mv $(DIR)/$@.tmp $@

GENERATED = cwast_gen.cc cwast_gen.h lexer_gen.cc


############################################################
# C++
############################################################
BUILD_DIR=../build
LEXER_BENCH=$(BUILD_DIR)/lexer_bench.exe
PP=$(BUILD_DIR)/pp.exe
EMIT_IR=$(BUILD_DIR)/emit_ir.exe


$(LEXER_BENCH)::
	@cd $(BUILD_DIR); $(MAKE) -s lexer_bench.exe

$(PP)::
	@cd $(BUILD_DIR); $(MAKE) -s pp.exe

$(EMIT_IR)::
	@cd $(BUILD_DIR); $(MAKE) -s emit_ir.exe

run_lexer_bench: $(LEXER_BENCH)
	/bin/time -p $(LEXER_BENCH)  Lib/*cw TestData/*cw  LangTest/*cw  > /dev/null

############################################################
# TESTING
#############################################################

tests_meta_py: $(ALL_SOURCES_NO_GENERIC:%.cw=$(DIR)/%.cw.meta)
	@echo "PASSED $@"

$(DIR)/%.cw.meta: %.cw
	@echo "[typify $@]"
	$(EMIT_IR)  $<

############################################################
# Profile
#############################################################
# For profiling to work, run this as root first:
# echo "-1" > /proc/sys/kernel/perf_event_paranoid
#
# to examine the profile use
# perf report
XXX1 =  Lib/*cw
XXX2 = $(XXX1) $(XXX1)
XXX3 = $(XXX2) $(XXX2)
XXX4 = $(XXX3) $(XXX3)
XXX5 = $(XXX4) $(XXX4)
XXX6 = $(XXX5) $(XXX5)
XXX7 = $(XXX6) $(XXX6)

profile_lexer: $(LEXER_BENCH)
	perf record -g -F max $(LEXER_BENCH) -m parser $(XXX7) $(XXX5) $(XXX1)

benchmark_lexer: $(LEXER_BENCH)
	/bin/time -p $(LEXER_BENCH) -m parser $(XXX7) $(XXX5) $(XXX1)

profile_emit_ir: $(EMIT_IR)
	perf record -g -F max $(EMIT_IR) $(filter-out $(wildcard */*gen.cw), $(LIB_SOURCES))

benchmark_emit_ir: $(EMIT_IR)
	/bin/time -p $(EMIT_IR) $(filter-out $(wildcard */*gen.cw), $(LIB_SOURCES))


all:: $(LEXER_BENCH) $(PP) $(EMIT_IR)

clean:
	@echo cleaning and setting up build dirs
	@rm -rf $(DIR)/*